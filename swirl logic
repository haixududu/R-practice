逻辑关系
==
<=, <
>= , 
&& /& = and 
|/|| = or 
!= not equal the opposite of this !x == x negating expression
istrue(true)
xor(5 == 6, !FALSE) xor() exclusive 
ints()
which(ints<2) indicates the elements 
any() return true 
The all() function will return TRUE if
| every element in the logical vector is TRUE.



question: This expression may be a little tricky, 
so think about negating the expression 5 == 7 (all you need is an exclamation point in front).
answer: !5 == 7
explaination: Let's take a moment to review. The equals operator `==` tests whether two
| boolean values or numbers are equal, the not equals operator `!=` tests
| whether two boolean values or numbers are unequal, and the NOT operator `!`
| negates logical expressions so that TRUE expressions become FALSE and FALSE
| expressions become TRUE.
more practice:  Which of the following evaluates to FALSE?
correct anwer:  !(0 >= -1)
more practice: What do you think the following expression will evaluate to?: (TRUE != FALSE)
| == !(6 == 7)
answer:TRUE
distingush &/&&
& :to evaluate AND across a vector
TRUE & c(TRUE, FALSE, FALSE)
explanation:c(TRUE, TRUE, TRUE) & c(TRUE, FALSE, FALSE).
&& 
correct answer TRUE && c(TRUE, FALSE, FALSE)
explanation: In this case, the left operand is only evaluated with the first member of the
| right operand (the vector). The rest of the elements in the vector aren't
| evaluated at all in this expression
|/||
|: verion of or evaluates OR across an entrie vector 
answer:TRUE | c(TRUE, FALSE, FALSE) 
output: [1] TRUE TRUE TRUE
||: version of OR only evaluses the first member of vector
answer: TRUE || c(TRUE, FALSE, FALSE)
output: [1] TRUE
 5 > 8 || 6 != 8 && 4 > 3.9
 istrue()=true
 

question: Use the any() function to see if any of the elements of ints are less than
| zero.
answer: any( ints < 0)
question:  Use the all() function to see if all of the elements of ints are greater than
| zero
answer:all(ints > 0)



